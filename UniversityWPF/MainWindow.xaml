<Window x:Class="UniversityWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UniversityWPF"
        xmlns:conv="clr-namespace:UniversityWPF.Library.Converters"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/MainStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <conv:BoolToOppositeBoolConverter x:Key="boolOppositeConverter"/>
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel LastChildFill="True">
        <!--Start: Header-->
        <TextBlock DockPanel.Dock="Top" Text="University"/>
        <!--End: Header-->

        <!--Start: Footer-->
        <StatusBar DockPanel.Dock="Bottom">
            <TextBlock Text="{Binding StringFormat=Current page - {0}, ElementName=MainTabs, Path=SelectedItem.Header}"/>
            <TextBlock x:Name="statBarAddInfo"/>
        </StatusBar>
        <!--End: Footer-->

        <!--Start: Body-->
        <TabControl x:Name="MainTabs" TabStripPlacement="Left">
            <!--Start: Home tab-->
            <TabItem Header="Home" Style="{StaticResource HorizontalTabItem}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.2*"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <!--Start: Left column-->
                    <StackPanel Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center">
                        <TextBlock Text="Courses"/>
                        <TextBlock Text="{Binding StringFormat=Number of courses: {0}, Path=CourseService.Courses.Count}"/>
                    </StackPanel>
                    <DataGrid Grid.Column="0" Grid.Row="1" ItemsSource="{Binding CourseService.Courses}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id" Binding="{Binding CourseId}"/>
                            <DataGridTextColumn Header="Course name" Width="*" Binding="{Binding Name}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <!--End: Left column-->
                    <!--Start: Central column-->
                    <StackPanel Grid.Column="1" Grid.Row="0" HorizontalAlignment="Center">
                        <TextBlock Text="Groups"/>
                        <TextBlock Text="{Binding StringFormat=Number of groups: {0}, Path=GroupService.Groups.Count}"/>
                    </StackPanel>
                    <DataGrid Grid.Column="1" Grid.Row="1" ItemsSource="{Binding GroupService.Groups}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id" Binding="{Binding GroupId}"/>
                            <DataGridTextColumn Header="Group name" Width="*" Binding="{Binding Name}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <!--End: Central column-->
                    <!--Start: Right column-->
                    <StackPanel Grid.Column="2" Grid.Row="0" HorizontalAlignment="Center">
                        <TextBlock Text="Students"/>
                        <TextBlock Text="{Binding StringFormat=Number of students: {0}, Path=StudentService.Students.Count}"/>
                    </StackPanel>
                    <DataGrid Grid.Column="2" Grid.Row="1" ItemsSource="{Binding StudentService.Students}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id" Binding="{Binding StudentId}"/>
                            <DataGridTextColumn Header="First name" Width="*" Binding="{Binding FirstName}"/>
                            <DataGridTextColumn Header="Last name" Width="*" Binding="{Binding LastName}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <!--End: Right column-->
                </Grid>
            </TabItem>
            <!--End: Home tab-->
            <!--Start: Course tab-->
            <TabItem Header="Courses" Style="{StaticResource HorizontalTabItem}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <DataGrid x:Name="CoursesTable" Grid.Row="0" ItemsSource="{Binding CourseService.Courses}"
                              IsReadOnly="{Binding ElementName=CoursesCanEdit, Path=IsChecked,
                                                   Converter={StaticResource boolOppositeConverter}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="RowEditEnding">
                                <i:InvokeCommandAction Command="{Binding CourseService.SaveChangesCommand}"
                                                       CommandParameter="{Binding ElementName=CoursesTable,
                                                                                  Path=SelectedItem}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id" Binding="{Binding CourseId}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Course name"
                                                Binding="{Binding Name, UpdateSourceTrigger=LostFocus}"/>
                            <DataGridTextColumn Header="Description" Width="*" 
                                                Binding="{Binding Description, UpdateSourceTrigger=LostFocus}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <WrapPanel Grid.Row="1" HorizontalAlignment="Right">
                        <CheckBox DockPanel.Dock="Left" Content="Editing mod"
                                  x:Name="CoursesCanEdit"/>
                    </WrapPanel>
                </Grid>
            </TabItem>
            <!--End: Course tab-->
            <!--Start: Groups tab-->
            <TabItem Header="Groups" Style="{StaticResource HorizontalTabItem}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <DataGrid x:Name="GroupsTable" Grid.Row="0" ItemsSource="{Binding GroupService.Groups}"
                              IsReadOnly="{Binding ElementName=GroupsCanEdit, Path=IsChecked,
                                                   Converter={StaticResource boolOppositeConverter}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="RowEditEnding">
                                <i:InvokeCommandAction Command="{Binding GroupService.SaveChangesCommand}"
                                                       CommandParameter="{Binding ElementName=GroupsTable,
                                                                                  Path=SelectedItem}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id" Binding="{Binding GroupId}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Group name"
                                                Binding="{Binding Name, UpdateSourceTrigger=LostFocus}"/>
                            <DataGridComboBoxColumn Header="Course name" Width="*"
                                                    SelectedValueBinding="{Binding CourseId, UpdateSourceTrigger=LostFocus}"
                                                    DisplayMemberPath="Name"
                                                    SelectedValuePath="CourseId">
                                <DataGridComboBoxColumn.ElementStyle>
                                    <Style TargetType="{x:Type ComboBox}">
                                        <Setter Property="ItemsSource" Value="{Binding Path=DataContext.CourseService.Courses, 
                                                                                       RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                    </Style>
                                </DataGridComboBoxColumn.ElementStyle>
                                <DataGridComboBoxColumn.EditingElementStyle>
                                    <Style TargetType="{x:Type ComboBox}">
                                        <Setter Property="ItemsSource" Value="{Binding Path=DataContext.CourseService.Courses, 
                                                                                       RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                    </Style>
                                </DataGridComboBoxColumn.EditingElementStyle>
                            </DataGridComboBoxColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <WrapPanel Grid.Row="1" HorizontalAlignment="Right">
                        <CheckBox DockPanel.Dock="Left" Content="Editing mod"
                                  x:Name="GroupsCanEdit"/>
                    </WrapPanel>
                </Grid>
            </TabItem>
            <!--End: Groups tab-->
            <!--Start: Students tab-->
            <TabItem Header="Students" Style="{StaticResource HorizontalTabItem}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <DataGrid x:Name="StudentsTable" Grid.Row="0" ItemsSource="{Binding StudentService.Students}"
                              IsReadOnly="{Binding ElementName=StudentsCanEdit, Path=IsChecked,
                                                   Converter={StaticResource boolOppositeConverter}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="RowEditEnding">
                                <i:InvokeCommandAction Command="{Binding StudentService.SaveChangesCommand}"
                                                       CommandParameter="{Binding ElementName=StudentsTable,
                                                                                  Path=SelectedItem}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id" Binding="{Binding StudentId}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="First name"
                                                Binding="{Binding FirstName, UpdateSourceTrigger=LostFocus}"/>
                            <DataGridTextColumn Header="Last name"
                                                Binding="{Binding LastName, UpdateSourceTrigger=LostFocus}"/>
                            <DataGridComboBoxColumn Header="Group name" Width="*"
                                                    SelectedValueBinding="{Binding GroupId, UpdateSourceTrigger=LostFocus}"
                                                    DisplayMemberPath="Name"
                                                    SelectedValuePath="GroupId">
                                <DataGridComboBoxColumn.ElementStyle>
                                    <Style TargetType="{x:Type ComboBox}">
                                        <Setter Property="ItemsSource" Value="{Binding Path=DataContext.GroupService.Groups, 
                                                                                       RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                    </Style>
                                </DataGridComboBoxColumn.ElementStyle>
                                <DataGridComboBoxColumn.EditingElementStyle>
                                    <Style TargetType="{x:Type ComboBox}">
                                        <Setter Property="ItemsSource" Value="{Binding Path=DataContext.GroupService.Groups, 
                                                                                       RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                    </Style>
                                </DataGridComboBoxColumn.EditingElementStyle>
                            </DataGridComboBoxColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <WrapPanel Grid.Row="1" HorizontalAlignment="Right">
                        <CheckBox DockPanel.Dock="Left" Content="Editing mod"
                                  x:Name="StudentsCanEdit"/>
                    </WrapPanel>
                </Grid>
            </TabItem>
            <!--End: Students tab-->
        </TabControl>
        <!--End: Body-->
    </DockPanel>
</Window>
